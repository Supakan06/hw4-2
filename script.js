let products = JSON.parse(localStorage.getItem("products")) || [];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
function addProduct() {
    const name = document.getElementById("productName").value;
    const price = parseFloat(document.getElementById("productPrice").value);
    const stock = parseInt(document.getElementById("productStock").value);
    const category = document.getElementById("productCategory").value;

    if (!name || isNaN(price) || isNaN(stock)) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö");
        return;
    }

    const newProduct = {
        id: Date.now().toString(),
        name,
        price,
        inStock: stock,
        category,
        totalSales: 0,
        minStock: 5
    };

    products.push(newProduct);
    localStorage.setItem("products", JSON.stringify(products));
    displayProducts();
    updateLastUpdated();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function updateStock(productId, quantity) {
    products = products.map(product =>
        product.id === productId ? { ...product, inStock: product.inStock + quantity } : product
    );

    localStorage.setItem("products", JSON.stringify(products));
    displayProducts();
    updateLastUpdated();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏î‡πâ)
function sellProduct(productId) {
    let amount = parseInt(document.getElementById(`sellAmount-${productId}`).value);
    products = products.map(product => {
        if (product.id === productId && product.inStock >= amount) {
            return { 
                ...product, 
                inStock: product.inStock - amount, 
                totalSales: product.totalSales + amount
            };
        } 
        return product;
    });
    localStorage.setItem("products", JSON.stringify(products));
    displayProducts();
    updateLastUpdated(); 
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ
function generateSalesReport() {
    const bestSellerList = document.getElementById("bestSellers");
    bestSellerList.innerHTML = "";
    const sortedProducts = [...products].sort((a, b) => b.totalSales - a.totalSales);

    sortedProducts.forEach(product => {
        if (product.totalSales > 0) {
            let li = document.createElement("li");
            li.innerHTML = `<span class="best-seller">${product.name}</span> - ‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß ${product.totalSales} ‡∏ä‡∏¥‡πâ‡∏ô`;
            bestSellerList.appendChild(li); 
        }
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function searchProduct() {
    const searchTerm = document.getElementById("searchInput").value.toLowerCase(); 
    const filteredProducts = products.filter(product => 
        product.name.toLowerCase().includes(searchTerm) || 
        product.category.toLowerCase().includes(searchTerm)
    );
    displayFilteredProducts(filteredProducts);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
function displayFilteredProducts(filteredProducts) {
    const list = document.getElementById("productList"); 
    list.innerHTML = ""; 
    filteredProducts.forEach(product => { 
        let li = document.createElement("li");
        li.innerHTML = `
            ${product.name} (${product.category}) - ${product.price} ‡∏ö‡∏≤‡∏ó 
            <strong class="${product.inStock < product.minStock ? 'low-stock-list' : ''}">[‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: ${product.inStock} ‡∏ä‡∏¥‡πâ‡∏ô]</strong>
             <br> //git commit -m  "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡πà‡∏∏‡∏°‡∏Ç‡∏≤‡∏¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å ‡πÄ‡πÄ‡∏Å‡πâ‡πÑ‡∏Ç ‡∏•‡∏ö"
            üì¶ ‡∏Ç‡∏≤‡∏¢: <input type="number" id="sellAmount-${product.id}" min="1" value="1">
            <button tpye="button" class="btn btn-success" onclick="sellProduct('${product.id}')">‡∏Ç‡∏≤‡∏¢</button>
            <button tpye="button" class="btn btn-warning" onclick="updateStock('${product.id}', 1)">+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å</button>
            <br>
            ‚úèÔ∏è <button type="button" class="btn btn-info" onclick="editProduct('${product.id}')">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
            üóëÔ∏è <button type="button" class="btn btn-danger" onclick="deleteProduct('${product.id}')">‡∏•‡∏ö</button>
        `;
        list.appendChild(li);
    });
    generateSalesReport();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function deleteProduct(productId) {
    if (confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ?")) {
        products = products.filter(product => product.id !== productId);
        localStorage.setItem("products", JSON.stringify(products));
        displayProducts();
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
let editProductId = null; // ‡πÄ‡∏Å‡πá‡∏ö ID ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function editProduct() {
// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
// ‡πÄ‡∏Å‡πá‡∏ö ID ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
// ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function saveEditedProduct() { 
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡πÄ‡∏Å‡πâ‡πÑ‡∏Ç
function cancelEdit() {
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
function updateLastUpdated() {
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function clearAllData() {
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î
function checkLowStock() {
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
function displayProducts() {
}

//  ‡πÉ‡∏ä‡πâ DOM ‡πÄ‡πÄ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
